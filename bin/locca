#!/usr/bin/env ruby
require 'gli'
require 'locca'

include GLI::App

program_desc 'Application localization kit'

version Locca::VERSION

#desc 'Verbose'
#switch [:v,:verbose]

desc 'Localization configs dir'
arg_name '<path>'
flag ['locca-dir'.to_sym]

desc 'Work dir'
arg_name '<path>'
flag ['work-dir'.to_sym]

# desc 'Initialize project'
# command :init do |c|
# 	c.action do |global_options,options,args|
# 		exit_now!("Init is not implemented")
# 	end
# end

desc 'Create and update language files from source code'
arg_name 'Describe arguments to build here'
command :build do |c|
	c.action do |global_options,options,args|
		$locca.build()
	end
end

# desc 'Synchronize changes with server'
# arg_name 'Describe arguments to sync here'
# command :sync do |c|
# 	c.action do |global_options,options,args|
# 		exit_now!("Sync is not implemented")
# 	end
# end

desc 'Translate files'
arg_name 'language'
command :translate do |c|
	c.action do |global_options,options,args|
		$locca.translate(args[0])
	end
end

pre do |global,command,options,args|
	$locca = Locca::Locca.new(global['work-dir'.to_sym], global['locca-dir'.to_sym])

	true
end

post do |global,command,options,args|
	# Post logic here
	# Use skips_post before a command to skip this
	# block on that command only
end

on_error do |exception|
	# Error logic here
	# return false to skip default error handling
	# puts exception.backtrace
	true
end

exit run(ARGV)
